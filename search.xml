<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>游戏机制——高级游戏设计技术笔记</title>
      <link href="/2019/04/13/%E6%B8%B8%E6%88%8F%E6%9C%BA%E5%88%B6%E2%80%94%E2%80%94%E9%AB%98%E7%BA%A7%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/04/13/%E6%B8%B8%E6%88%8F%E6%9C%BA%E5%88%B6%E2%80%94%E2%80%94%E9%AB%98%E7%BA%A7%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2>一、设计游戏机制</h2><h3>1.1 游戏的定义</h3><ul><li>● 规则是游戏的本质特性</li><li>● 游戏可以理解为状态机，类似dvd播放机</li></ul><h3>1.2 游戏的不可预测性</h3><ul><li>● 游戏应有不可预测性</li><li>● <strong>游戏不可预测性的产生要素</strong><ul><li>○ 偶然性</li><li>○ 让玩家做选择</li><li>○ 设计能衍生复杂玩法的规则</li></ul></li></ul><h3>1.3 规则与机制</h3><ul><li>● 规则 明晓</li><li>● 机制 隐藏 详尽 涵盖一切要素</li><li>● 核心机制 隐藏 无明显界限</li><li>● <strong>游戏机制</strong><ul><li>○ 物理机制：物体的位置，移动方向以及物体之间的重叠碰撞是最主要的计算任务。但游戏中的物理没那么严谨</li><li>○ 内部经济：游戏元素的收集，消费和交易构成了内部经济。健康，声望，魔力等抽象的概念也同样属于游戏经济</li><li>○ 渐进机制：关卡设计规定了玩家在世界中能够如何行动。玩家的进度被限制。这些都是这种渐进机制的例子</li><li>○ 战术机动：可以将单位分配到地图上的特定位置，从而获得进攻或防守上的优势。不仅在策略游戏重要，在rpg游戏也一样重要</li><li>○ 社交互动：rpg游戏有有规定角色应该如何进行表演的规则。策略类游戏有可能会规定玩家之间如何结盟和解盟的规则</li></ul></li><li>● 机制独立于媒介，移植方便</li><li>● 游戏机制提供可玩性，但美术音乐剧情贡献不一定更少</li></ul><h3>1.4 连续机制与离散机制</h3><ul><li>● <strong>连续机制</strong><ul><li>○ 物理机制通常是连续的</li><li>○ 连续机制需要大量的数学运算</li></ul></li><li>● <strong>离散机制</strong><ul><li>○ 内部经济机制通常是离散的</li><li>○ 离散机制能给人更多的创新机会</li><li>○ 计算机技术的成熟使得模拟物理机制较为容易，但经济机制复杂高深，难以设计</li></ul></li></ul><h3>1.5 游戏设计流程</h3><ul><li>● 强调的是以玩家为中心的设计</li><li>● <strong>概念设计阶段</strong><ul><li>○ 确定总体概念、目标受众、玩家所扮演的角色，并产生一份愿景文档</li><li>○ 快速的为基本机制开发一个试验性版本</li></ul></li><li>● <strong>详细设计阶段</strong><ul><li>○ 创建游戏机制和关卡、撰写故事情节、制作美术资源等</li><li>○ 保持短期迭代开发，逐渐增加可玩的功能或原型</li><li>○ 找开发组外部人员来试玩</li></ul></li><li>● <strong>调整阶段</strong><ul><li>○ 特性冻结，做减法</li></ul></li></ul><h3>1.6 原型制作技术</h3><ul><li>● <strong>一些术语</strong><ul><li>○ 高保真原型</li><li>○ 低保真原型</li><li>○ 垂直切片</li><li>○ 水平切片</li></ul></li><li>● <strong>三种原型</strong><ul><li>○ 软件原型 很好评估可玩性，慢、贵</li><li>○ 纸面原型 无需依赖计算机，快速且易于修改</li><li>○ 物理原型 简单地起草出规则并在现实世界中测试它们</li></ul></li></ul><h3>1.7 游戏原型聚焦点</h3><ul><li>● 技术演示</li><li>● 游戏经济</li><li>● 界面和操作方案</li><li>● 教程</li></ul><blockquote><p><img src="https://pic.superbed.cn/item/5cb1ef703a213b0417308b20" alt="Background"></p></blockquote><h2>二、突现和渐进</h2><h3>2.1 突现型和渐进型</h3><ul><li>● <strong>突现型游戏</strong><ul><li>○ 规则简单但变化多样</li><li>○ 突现是最原始的游戏机制</li></ul></li><li>● <strong>渐进型游戏</strong><ul><li>○ 提供一系列预设的挑战，每一种挑战仅有一种解决方案，挑战的次序固定</li><li>○ 任何有攻略流程的游戏都是渐进型游戏</li></ul></li></ul><h3>2.2 突现型与渐进型对比</h3><ul><li>● 突现型游戏规则较少、要素关联性高、概率空间大而广</li><li>● 渐进型游戏规则较多、要素关联性低、概率空间窄而深</li><li>● 理论上看，突现是最有趣的结构</li><li>● 游戏应该是过程密集的而不是数据密集的</li><li>● 现代游戏都是混合型的</li><li>● 突现型机制并不比渐进型机制更优秀，它们只是不同而已</li></ul><h3>2.3 突现型游戏</h3><ul><li>● 突现一词早就出现了，即系统的行为特性无法沟通过他的各个组成部分直接推导出来的现象</li><li>● 突现特性不是源于游戏单个组成部分的复杂性，而是源于游戏各个部分之间相互作用产生的复杂性</li><li>● 追求用较少的规则产生较多的状态，构造简单却能产生出突现型玩法的游戏系统的机制</li><li>● 概率空间的面积越大，可玩性越高</li><li>● 实例《文明》</li></ul><h3>2.4 渐进型游戏</h3><ul><li>● 渐进型机制对拥有出色的关卡和有趣的交互式故事的游戏至关重要</li><li>● 设计师指定玩家首先遇到哪些游戏元素，拥有哪些初始资源，为了过关必须完成那些任务等等。可以决定玩家拥有的能力，利用关卡布局来控制玩家的进度</li><li>● 《半条命》的轨道引导，《塞尔达传说》的辐射式布局和锁-钥匙机制</li><li>● 关卡的物理布局和其中关键道具的位置是控制玩家进度的重要工具。确保玩家有机会学习并应用那些过关必须的技巧</li></ul><blockquote><p><img src="https://0d077ef9e74d8.cdn.sohucs.com/rnx03Dv_png" alt="Background"></p></blockquote><h2>三、复杂系统和突现结构</h2><h3>3.1 游戏的一致性比写实性更重要</h3><ul><li>● FPS中的“火箭跳”，火箭爆炸会对周围的物体产生冲击力，玩家可以利用这个冲击力使得自己跳的更高</li></ul><h3>3.2 秩序和混沌</h3><ul><li>● 复杂系统的行为表现可能是有序的，也可能是混沌的，或者介于两者之间</li><li>● 有序系统好预测，混沌系统不好预测</li><li>● 复杂系统的行为模式：秩序——周期性系统——实现行为——混沌</li></ul><h3>3.3 复杂系统的结构特性</h3><ul><li>● 复杂系统存在蝴蝶效应</li><li>● <strong>活跃并相互关联的组成部分</strong><ul><li>○ 细胞自动机——一系列简单的规则集合。这些规则控制一行/一个格子的状态（黑/白）。规则决定格子颜色改变的条件，以及当前格子如何影响其他格子。细胞自动机的规则没有任何随机性，但是产生出独特且看似随机的图形</li><li>○ 动态行为的系统的三个关键特性：<ul><li>○ 系统必须由相对简单的方式将每个组成部分分个别的描述出来</li><li>○ 系统必须支持远程信息传递</li><li>○ 系统组成单元的活跃程度能够有效的反映出系统行为的复杂度</li></ul></li><li>○ 复杂系统的构建门槛很低</li><li>○ 系统元素的活跃度和相关联度是很好的指示器。可以用于将突现型游戏和渐进型游戏分开</li></ul></li><li>● <strong>反馈循环</strong><ul><li>○ 负反馈可以保持系统平衡，正反馈会导致系统失稳</li><li>○ 生态系统中猎物和捕食者数量的稳定就是因为反馈</li></ul></li><li>● <strong>对突现进行分类</strong><ul><li>○ 微小突现：要么不存在反馈，要么反馈只发生在同一规模级别中的各个元素之间</li><li>○ 弱突现：在系统不同层级之间实现自顶向下的反馈。如果单位即能感知周围同类的行为，又能感知它所在的群体的整体状态。就会产生群体行为</li><li>○ 多重突现：有多种反馈，跨越了不同的规模级别。小范围的正反馈和大范围的负反馈</li><li>○ 强突现：各规模级别间的较大差异。</li></ul></li></ul><h3>3.4 驾驭游戏中的突现特性</h3><ul><li>● 活跃并互相关联的系统组成部分+反馈循环+系统的不同规模级别+等等=游戏的结构特性</li></ul><blockquote><p><img src="https://0d077ef9e74d8.cdn.sohucs.com/rnx03NJ_png" alt="Background"></p></blockquote><h2>四、内部经济</h2><h3>4.1 内部经济的核心要素</h3><ul><li>● 资源、实体、四种机制（来源、消耗器、转换器、交易器）</li></ul><h3>4.2 经济结构</h3><ul><li>● 负反馈引发均衡，正反馈引发军备竞赛</li><li>● 正反馈机制可能造成死锁和相互依赖现象</li><li>● 玩家技巧、资源分布、游戏地形会影响到游戏经济运行</li><li>● 注意由玩家双方所持资源的差异而产生的负反馈机制引起的动态均衡</li><li>● 皮筋约束</li></ul><h3>4.3 内部经济在游戏中的应用</h3><ul><li>● 补强物理机制</li><li>● 面包屑机制</li><li>● 增益道具构成的经济机制</li><li>● 内部经济机制影响游戏进程</li><li>● 让资源不断重生，避免死锁</li><li>● 引入策略性的玩法</li></ul><blockquote><p><img src="https://pic.superbed.cn/item/5cb1ef703a213b0417308b32" alt="Background"></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何阅读一本书笔记</title>
      <link href="/2019/04/13/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/04/13/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2>一、阅读的层次</h2><h3>1.1 阅读的艺术</h3><ul><li>● 在于尽可能掌握住每一种信息的技巧</li><li>● 是一个凭借头脑运作，不假任何外助，以一己之力提升自我的过程</li></ul><h3>1.2 阅读的目标</h3><ul><li>● 为获得资讯</li><li>● 为求得理解</li></ul><h3>1.3 两种学习类型</h3><ul><li>● 指导型学习，立足于被传达的信息</li><li>● 自我发现型学习，立足于自然或世界</li></ul><h3>1.4 阅读的层次</h3><ul><li>● 基础阅读</li><li>● 检视阅读</li><li>● 分析阅读</li><li>● 主题阅读</li></ul><h3>1.5 层次间关系</h3><ul><li>● 阅读层次是渐进的，第四层是最高层次，包括了所有阅读层次，也超越了所有阅读层次</li></ul><h3>1.6 第一层次，基础阅读</h3><ul><li>● 阅读准备阶段</li><li>● 阅读简单读物</li><li>● 快速建立字汇的能力</li><li>● 精炼增进技巧</li><li>● 消化阅读经验</li></ul><h3>1.7 第二层次，检视阅读</h3><ul><li>● <strong>有系统的略读或粗读</strong><ul><li>○ 先看书名页</li><li>○ 研究目录页</li><li>○ 检阅索引</li><li>○ 查看出版者介绍</li><li>○ 挑与主题息息相关的篇章看</li><li>○ 把书打开，东翻西翻，直至翻完全书</li><li>○ 建议把自己想象成侦探，寻找书的主题或思想的线索</li></ul></li><li>● <strong>粗浅的阅读</strong><ul><li>○ 难懂的书，一气通贯，不要停</li><li>○ 不要企图了解每一个字句</li><li>○ 重视书的大原则而非细微点</li></ul></li></ul><h3>1.8 阅读的速度</h3><ul><li>● 依照读物性质</li><li>● 依照文本难度</li></ul><h3>1.9 做一个自我要求的读者</h3><ul><li>● <strong>提问题</strong><ul><li>○ 这本书整体在讲什么</li><li>○ 这本书细节讲了什么，怎么讲的</li><li>○ 这本书有道理吗</li><li>○ 这本书和你有什么关系</li></ul></li><li>● <strong>做笔记</strong><ul><li>○ 画底线</li><li>○ 圈关键</li><li>○ 双底线</li><li>○ 做星号</li><li>○ 做顺序编号</li><li>○ 在空白处写下其他相关页码</li><li>○ 在空白处做笔记</li></ul></li><li>● <strong>笔记类型</strong><ul><li>○ 结构笔记</li><li>○ 书的类型、书的内容、书的架构</li><li>○ 概念笔记</li><li>○ 作者的观点、自己的观点</li><li>○ 辨证笔记</li><li>○ 针对一场讨论情景</li></ul></li></ul><h2>二、第三层次，分析阅读</h2><h3>2.1 第一阶段：找出一本书的主旨规则</h3><ul><li>● 依照书的种类与主题分类</li><li>● 使用最简短的文字概括全书</li><li>● 列出全书主要部分</li><li>● 确定作者想解决的问题</li></ul><h3>2.2 第二阶段：诠释一本书的内容规则</h3><ul><li>● 诠释作者的关键字</li><li>● 抓住作者的重要主旨</li><li>● 重构架构作者的论述</li><li>● 确认书中已解决与未解决的问题</li></ul><h3>2.3 第三阶段：评论一本书的规则</h3><ul><li>● 读懂之后再评论</li><li>● 不要争强好胜</li><li>● 证明真正知识与个人观点的不同</li><li>● 批评时注意证明作者的知识不足、知识错误、结构不整、不合逻辑</li></ul><h3>2.4 辅助阅读</h3><ul><li>● 寻找相关经验的角色</li><li>● 寻找类似主题的书籍</li><li>● 辩证运用主题和摘要</li><li>● 学会用字典与工具书</li></ul><h3>2.5 规则的理想化</h3><ul><li>● 规则只是衡量阅读层次的理想标准，在参考的基础上使用个性化方法，达到与自己相应的阅读层次</li></ul><h2>三、阅读不同读物的方法</h2><h3>3.1 实用性书籍</h3><ul><li>● 书籍提供指引，实际问题只能靠行动解决</li><li>● 理论性的原则会归纳出出色的行事规则</li><li>● 从命令句寻找规则主旨</li></ul><h3>3.2 想象文学</h3><ul><li>● 不要抗拒想象文学给你的影响力</li><li>● 不要去找共识、主旨或论述</li><li>● 不要用适用于传递知识与真理一致的标准来批评小说</li><li>● 规则类似隐喻，不要太仔细验证这些规则</li></ul><h3>3.3 故事戏剧与诗歌</h3><ul><li>● 属于纯艺术领域，不必采取实际行动</li><li>● 重在感受与体验</li><li>● 一气呵成，把我整体感觉</li><li>● 大声带感情朗读</li><li>● 了解作者与作品背景</li></ul><h3>3.4 历史书</h3><ul><li>● 每本历史书都有一个特殊且有限定范围的主题</li><li>● 纲要架构通常是固定的</li><li>● 分辨作者主观心态与客观历史史实</li></ul><h3>3.5 科学与数学</h3><ul><li>● 通过阅读一些伟大巨著来了解科学这门行业</li><li>● 科学的客观不在于没有最初的偏见，而在于坦白承认</li><li>● 掌握科学作品中的数学问题</li><li>● 你的责任不是要成为这个主题专家，而是去了解相关问题</li></ul><h3>3.6 哲学书</h3><ul><li>● 孩子是天生的发问者，用赤子之心看问题</li><li>● 对待问题应单纯天真的提问，成熟睿智的回答</li><li>● 重视思考在哲学领域的作用</li><li>● 从抽象中找出中心思想</li></ul><h3>3.7 社会科学</h3><ul><li>● 通常取材于读者所熟悉的经验</li><li>● 作品混杂众多领域，甚至有的带有虚幻色彩</li><li>● 关于一个主题通常要读好几本书</li><li>● 着眼于特殊事件而非特殊的一本书</li><li>● 更多运用主题阅读方法</li></ul><h2>四、第四层次，主题阅读</h2><h3>4.1 准备阶段：观察研究范围</h3><ul><li>● 针对主题设计试验性书目并浏览</li><li>● 确定与主题相关书目</li></ul><h3>4.2 进入正题：主题阅读本身</h3><ul><li>● 找出与主题相关书目中最相关的章节</li><li>● 根据主题，创造一套中立词汇</li><li>● 列出问题，建立一个中立主旨</li><li>● 界定主要与次要议题</li><li>● 分析以上问题，保持疏离与客观</li></ul><h3>4.3 生命与心智的成长</h3><ul><li>● 好的阅读，即主动的阅读，不仅对阅读本身有用，也不仅对工作事业有帮助，更能帮助我们的心智保持活力与增长</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git教程个人笔记</title>
      <link href="/2019/04/10/git%E6%95%99%E7%A8%8B%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/04/10/git%E6%95%99%E7%A8%8B%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2>一.控制系统集中式和分布式版本区别</h2><h3> 1.1集中式 必须联网 版本库集中存放在中央服务器借书还书</h3><h3> 1.2分布式 不用联网 版本库分散存放 安全性高</h3><h2>二.添加工作区文件到Git仓库，在repo文件夹下</h2><h3> 2.1使用命令 git add file，把要提交的修改从工作区添加到暂存区（Stage），可以添加多次</h3><blockquote><p>git add readme.txt</p></blockquote><h3> 2.2使用命令 git commit -m message，把暂存区的所有修改提交到版本库分支（Master），注释说明</h3><blockquote><p>git commit -m “wrote a readme file”</p></blockquote><h2>三.文件版本穿梭</h2><h3> 3.1查看提交历史，带file为查看单个文件</h3><blockquote><p>git log file<br>git log --pretty=oneline file</p></blockquote><h3> 3.2查看命令历史，带file为查看单个文件</h3><blockquote><p>git reflog file<br>git reflog --pretty=oneline file</p></blockquote><h3> 3.3版本穿梭，git reset --hard commit_id</h3><blockquote><p>git reset --hard 0ec438d</p></blockquote><h2>四.管理修改</h2><h3> 4.1查看状态</h3><blockquote><p>git status</p></blockquote><h3> 4.2查看修改，工作区与暂存区比对</h3><blockquote><p>git diff</p></blockquote><h3> 4.3查看修改，暂存区与版本库比对</h3><blockquote><p>git diff --cached<br>git diff --staged</p></blockquote><h3> 4.4查看修改，工作区与版本库比对，git diff HEAD – file</h3><blockquote><p>git diff HEAD – readme.txt</p></blockquote><h2>五.撤销修改</h2><h3> 5.1撤回工作区最近一次文件修改，git checkout – file，或在文件管理器修改，本质为版本库版本替换工作区版本</h3><blockquote><p>git checkout – readme.txt</p></blockquote><h3> 5.2撤回暂存区最近一次文件修改，git reset HEAD file</h3><blockquote><p>git reset HEAD readme.txt</p></blockquote><h3> 5.3撤回版本库修改，见3.3版本穿梭</h3><blockquote><p>git reset --hard commit_id</p></blockquote><h2>六.删除恢复文件</h2><h3> 6.1删除工作区与版本库文件，git rm file，之后git commit</h3><blockquote><p>git rm readme.txt<br>git commit -m “remove readme.txt”</p></blockquote><h3> 6.2恢复版本库文件，见3.3版本穿梭</h3><blockquote><p>git reset --hard commit_id</p></blockquote><h3> 6.3恢复工作区文件，见5.1版本库版本替换工作区版本</h3><blockquote><p>git checkout – file</p></blockquote><h2>七.远程仓库Github</h2><h3> 7.1一些指令</h3><blockquote><p>cd ~(进入用户主文件夹)<br>cd .ssh(进入.ssh文件夹)<br>ls(列出文件夹下目录)<br>cat id_rsa.pub(查看id_rsa.pub内容)</p></blockquote><h3> 7.2部署远程库</h3><h3> 7.2.1关联一个远程库，git remote add origin git@server-name:path/repo-name.git</h3><blockquote><p>git remote add origin <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:alsrf/learngit.git</p></blockquote><h3> 7.2.2第一次推送master分支所有内容</h3><blockquote><p>git push -u origin master</p></blockquote><h3> 7.2.3将本地工作区最新修改推送至GitHub，先将工作区文件提交到版本库，然后使用命令</h3><blockquote><p>git push origin master</p></blockquote><h3> 7.3从远程库克隆</h3><p>在要获取文件的文件夹下使用命令，git clone git@server-name:path/repo-name.git</p><blockquote><p>git clone <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:alsrf/gitskills.git</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown语法个人整理</title>
      <link href="/2019/04/09/markdown%E8%AF%AD%E6%B3%95%E4%B8%AA%E4%BA%BA%E6%95%B4%E7%90%86/"/>
      <url>/2019/04/09/markdown%E8%AF%AD%E6%B3%95%E4%B8%AA%E4%BA%BA%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2>一、文字编辑</h2><h3> 1.1 斜体</h3><pre><code>*斜体* or _斜体_</code></pre><blockquote><p><em>斜体</em></p></blockquote><h3> 1.2 粗体</h3><pre><code>**粗体** or __粗体__</code></pre><blockquote><p><strong>粗体</strong></p></blockquote><h3> 1.3 粗斜体</h3><pre><code>***粗斜体*** or ___粗斜体___</code></pre><blockquote><p><strong><em>粗斜体</em></strong></p></blockquote><h3> 1.4 删除线</h3><pre><code>~~删除线~~</code></pre><blockquote><p><s>删除线</s></p></blockquote><h3> 1.5 文字上标下标</h3><pre><code>&lt;sup&gt;文字上标&lt;/sup&gt;&lt;sub&gt;文字下标&lt;/sub&gt;</code></pre><blockquote><p>参照文字<sup>上标</sup>参照文字<br>参照文字<sub>下标</sub>参照文字</p></blockquote><h2>二、段落编辑</h2><h3> 2.1 标题分级</h3><pre><code># 一级标题## 二级标题###### 六级标题</code></pre><blockquote><h1>一级标题</h1><h2>二级标题</h2><h6 id="六级标题"><a class="header-anchor" href="#六级标题">¶</a>六级标题</h6></blockquote><h3> 2.2 行首缩进</h3><pre><code>&amp;ensp;半角空格&amp;emsp;全角空格</code></pre><blockquote><p>参照文字<br> alsrf<br> alsrf</p></blockquote><h3> 2.3 引用文字</h3><pre><code>&gt; 引用文字&gt;&gt; 引用文字层级</code></pre><blockquote><p>引用文字</p><blockquote><p>层一</p><blockquote><p>层二</p></blockquote></blockquote></blockquote><h3> 2.4 无序列表</h3><pre><code>+ 列表（加号+ 减号- 星号*）+ 列表层级</code></pre><ul><li>● 列表<ul><li>○ 列表层级</li><li>○ 列表层级</li></ul></li><li>● 列表<ul><li>○ 列表层级</li><li>○ 列表层级</li></ul></li></ul><h3> 2.5 有序列表</h3><pre><code>1. 列表一2. 列表二</code></pre><ol><li>列表一</li><li>列表二</li></ol><h2>三、插入要素</h2><h3> 3.1 代码区块</h3><h4>  3.1.1 代码区块行中</h4><pre><code>`代码部分`</code></pre><blockquote><p>参照文字<code>#include &lt;stdio.h&gt;</code>参照文字</p></blockquote><h4>  3.1.2 代码区块独立带行数</h4><pre><code>代码部分前后三个`</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;Hello,World!\n&quot;);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4>  3.1.3 代码区块无行数</h4><pre><code>代码区块（开头缩进4个空格或1个tab）</code></pre><blockquote><p>通常用于输出带有特殊符号文本 ~!@#$%^&amp;*()_+</p></blockquote><h3> 3.2 转义字符</h3><pre><code>前加反斜杠md中用到的主要可能有语法意义的非空白符号有：\ ` * _ { } [ ] ( ) # + - . !</code></pre><blockquote><p>\</p></blockquote><h3> 3.3 超链接</h3><pre><code>[链接标题](链接地址) </code></pre><blockquote><p><a href="https://alsrf.github.io/" target="_blank" rel="noopener">点此进入alsrf的小窝</a></p></blockquote><h3> 3.4 添加图片</h3><pre><code> ![图片备注](插入的图片.jpg) </code></pre><blockquote><p><img src="https://pic.superbed.cn/item/5cb1ef703a213b0417308b22" alt="Background"></p></blockquote><h3> 3.5 邮箱链接</h3><pre><code>&lt;邮箱地址&gt;</code></pre><blockquote><p>联系邮箱<a href="mailto:a2637435936@gmail.com" target="_blank" rel="noopener">a2637435936@gmail.com</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="/2019/04/08/%E6%B5%8B%E8%AF%95/"/>
      <url>/2019/04/08/%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/04/08/hello-world/"/>
      <url>/2019/04/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2>Quick Start</h2><h3>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>404</title>
      <link href="/404/index.html"/>
      <url>/404/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>search</title>
      <link href="/search/index.html"/>
      <url>/search/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
