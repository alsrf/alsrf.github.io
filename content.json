{"pages":[{"title":"404","text":"","path":"404/index.html","date":"04-11","excerpt":""},{"title":"search","text":"","path":"search/index.html","date":"04-11","excerpt":""}],"posts":[{"title":"git教程个人笔记","text":"一.控制系统集中式和分布式版本区别 1.1集中式 必须联网 版本库集中存放在中央服务器借书还书 1.2分布式 不用联网 版本库分散存放 安全性高 二.添加工作区文件到Git仓库，在repo文件夹下 2.1使用命令 git add file，把要提交的修改从工作区添加到暂存区（Stage），可以添加多次 git add readme.txt 2.2使用命令 git commit -m message，把暂存区的所有修改提交到版本库分支（Master），注释说明 git commit -m “wrote a readme file” 三.文件版本穿梭 3.1查看提交历史，带file为查看单个文件 git log file git log --pretty=oneline file 3.2查看命令历史，带file为查看单个文件 git reflog file git reflog --pretty=oneline file 3.3版本穿梭，git reset --hard commit_id git reset --hard 0ec438d 四.管理修改 4.1查看状态 git status 4.2查看修改，工作区与暂存区比对 git diff 4.3查看修改，暂存区与版本库比对 git diff --cached git diff --staged 4.4查看修改，工作区与版本库比对，git diff HEAD – file git diff HEAD – readme.txt 五.撤销修改 5.1撤回工作区最近一次文件修改，git checkout – file，或在文件管理器修改，本质为版本库版本替换工作区版本 git checkout – readme.txt 5.2撤回暂存区最近一次文件修改，git reset HEAD file git reset HEAD readme.txt 5.3撤回版本库修改，见3.3版本穿梭 git reset --hard commit_id 六.删除恢复文件 6.1删除工作区与版本库文件，git rm file，之后git commit git rm readme.txt git commit -m “remove readme.txt” 6.2恢复版本库文件，见3.3版本穿梭 git reset --hard commit_id 6.3恢复工作区文件，见5.1版本库版本替换工作区版本 git checkout – file 七.远程仓库Github 7.1一些指令 cd ~(进入用户主文件夹) cd .ssh(进入.ssh文件夹) ls(列出文件夹下目录) cat id_rsa.pub(查看id_rsa.pub内容) 7.2部署远程库 7.2.1关联一个远程库，git remote add origin git@server-name:path/repo-name.git git remote add origin git@github.com:alsrf/learngit.git 7.2.2第一次推送master分支所有内容 git push -u origin master 7.2.3将本地工作区最新修改推送至GitHub，先将工作区文件提交到版本库，然后使用命令 git push origin master 7.3从远程库克隆 在要获取文件的文件夹下使用命令，git clone git@server-name:path/repo-name.git git clone git@github.com:alsrf/gitskills.git","path":"2019/04/10/git教程个人笔记/","date":"04-10","excerpt":"","tags":[]},{"title":"markdown语法个人整理","text":"一、文字编辑 1.1 斜体 *斜体* or _斜体_ 斜体 1.2 粗体 **粗体** or __粗体__ 粗体 1.3 粗斜体 ***粗斜体*** or ___粗斜体___ 粗斜体 1.4 删除线 ~~删除线~~ 删除线 1.5 文字上标下标 &lt;sup&gt;文字上标&lt;/sup&gt; &lt;sub&gt;文字下标&lt;/sub&gt; 参照文字上标参照文字 参照文字下标参照文字 二、段落编辑 2.1 标题分级 # 一级标题 ## 二级标题 ###### 六级标题 一级标题 二级标题 ¶六级标题 2.2 行首缩进 &amp;ensp;半角空格 &amp;emsp;全角空格 参照文字 alsrf alsrf 2.3 引用文字 &gt; 引用文字 &gt;&gt; 引用文字层级 引用文字 层一 层二 2.4 无序列表 + 列表（加号+ 减号- 星号*） + 列表层级 不可抗力本网站显示不出来～ 2.5 有序列表 1. 列表一 2. 列表二 列表一 列表二 三、插入要素 3.1 代码区块 3.1.1 代码区块行中 `代码部分` 参照文字#include &lt;stdio.h&gt;参照文字 3.1.2 代码区块独立带行数 代码部分前后三个` 123456#include &lt;stdio.h&gt;int main()&#123; printf(&quot;Hello,World!\\n&quot;); return 0;&#125; 3.1.3 代码区块无行数 代码区块（开头缩进4个空格或1个tab） 通常用于输出带有特殊符号文本 ~!@#$%^&amp;*()_+ 3.2 转义字符 前加反斜杠 md中用到的主要可能有语法意义的非空白符号有：\\ ` * _ { } [ ] ( ) # + - . ! \\ 3.3 超链接 [链接标题](链接地址) 点此进入alsrf的小窝 3.4 添加图片 ![图片备注](插入的图片.jpg) 3.5 邮箱链接 &lt;邮箱地址&gt; 联系邮箱a2637435936@gmail.com","path":"2019/04/09/markdown语法个人整理/","date":"04-09","excerpt":"","tags":[]},{"title":"测试","text":"","path":"2019/04/08/测试/","date":"04-08","excerpt":"","tags":[]},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new \"My New Post\" More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment","path":"2019/04/08/hello-world/","date":"04-08","excerpt":"","tags":[]}]}